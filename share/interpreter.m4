include(macros.m4)dnl
dnl The usual header.
***
*** Reimplementation of the CREOL KIND
***
*** Copyright (c) 2007, 2008
***
*** Do NOT edit this file.  This file may be overwritten.  It has been
*** automatically generated from interpreter.m4 using m4.
***
*** This file has been generated from interpreter.m4 ($Revision: 1812 $)
***
*** This program is free software; you can redistribute it and/or
*** modify it under the terms of the GNU General Public License as
*** published by the Free Software Foundation; either version 3 of the
*** License, or (at your option) any later version.
***
*** This program is distributed in the hope that it will be useful, but
*** WITHOUT ANY WARRANTY; without even the implied warranty of
*** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
*** General Public License for more details.
***
*** You should have received a copy of the GNU General Public License
*** along with this program.  If not, see <http://www.gnu.org/licenses/>.
***

ifdef(`MODELCHECK', `load model-checker .
')dnl
load creol-datatypes .


***************************************************************************
***
*** Signature of programs and states.
***
***************************************************************************

***
*** Binding variables to values.
***
include(subst.m4)

include(statements.m4)

fmod CREOL-PROCESS is

  protecting CREOL-STM-LIST .

  sort Process .

  op idle : -> Process [ctor `format' (!b o)] .  
  op notFound : -> Process [ctor `format' (!b o)] .  
  op {_|_} : Subst StmtList -> Process [ctor `format' (r o r o r o)] . 

  var L : Subst .
  eq { L | noStmt } = idle . --- if ".label" is needed this is dangerous!
  eq idle = { noSubst | noStmt } [nonexec metadata "Causes infinite loops."] .

endfm

view Process from TRIV to CREOL-PROCESS is
  sort Elt to Process .
endv


*** Specifies a process pool, here a multiset of Processes
***
fmod CREOL-PROCESS-POOL is

ifdef(`EXPERIMENTAL',dnl
    protecting MULTISET{Process} * (sort MSet{Process} to MProc,
                                    sort NeMSet{Process} to NeMSet,
                                    op empty : -> MSet{Process} to noProc) .
,
    protecting CREOL-PROCESS .

    sort MProc .
    subsort Process < MProc .
    op noProc : -> MProc [ctor] .
    op _`,'_ : MProc MProc -> MProc
        [ctor assoc comm id: noProc prec 41 ``format'' (d r os d)] .
)

endfm



*** An inherits declaration
***
fmod CREOL-INHERIT is
  protecting CREOL-DATATYPES .
  sort Inh .

  op  _<_> : String  ExprList -> Inh [ctor prec 15] .

endfm

view Inh from TRIV to CREOL-INHERIT is
  sort Elt to Inh .
endv

fmod CREOL-METHOD is
  protecting CREOL-STM-LIST .
  sort Method .

  op <_: Method | Param:_, Att:_, Code:_> : 
    String VidList Subst StmtList -> Method [ctor
      `format' (c ! oc o d sc o d sc o d sc o c o)] .

endfm

view Method from TRIV to CREOL-METHOD is
  sort Elt to Method .
endv



include(`configuration.m4')

include(`evaluation.m4')

include(`machine.m4')

ifdef(`MODELCHECK', include(`predicates.m4'))dnl

eof
