==========================================
reduce in CREOL-DATA-SIG : emp .
result DataList: emp
==========================================
reduce in CREOL-DATA-SIG : emp .
result DataList: emp
==========================================
reduce in CREOL-DATA-VIDLIST : noVid .
result VidList: noVid
==========================================
reduce in CREOL-DATA-VIDLIST : noVid .
result VidList: noVid
==========================================
reduce in CREOL-DATA-SIG : "a" .
result Char: "a"
==========================================
reduce in CREOL-DATA-SIG : "a" :: "a" .
result NeExprList: "a" :: "a"
==========================================
reduce in CREOL-DATA-VIDLIST : "a", "a" .
result NeVidList: "a", "a"
==========================================
reduce in CREOL-EXPRESSION : "a"("a") .
result Expr: "a"("a")
==========================================
reduce in CREOL-DATA-SIG : null .
result Data: null
==========================================
reduce in CREOL-DATA-SIG : null :: null .
result NeDataList: null :: null
==========================================
reduce in CREOL-DATA-SIG : null :: "a" .
result NeExprList: null :: "a"
==========================================
reduce in CREOL-EXPRESSION : null :: "a"("a") :: null .
result NeExprList: null :: "a"("a") :: null
==========================================
reduce in CREOL-EXPRESSION : "a"("a") :: null .
result NeExprList: "a"("a") :: null
==========================================
reduce in CREOL-DATA-VIDLIST : null, "a" .
result [ExprList,VidList]: null, "a"
==========================================
reduce in CREOL-DATA-BOOL : bool(true) .
result Data: bool(true)
==========================================
reduce in CREOL-DATA-BOOL : "="(null :: null) .
result Data: bool(true)
==========================================
reduce in CREOL-DATA-BOOL : "/="(null :: null) .
result Data: bool(false)
==========================================
reduce in CREOL-DATA-BOOL : "~"("="(null :: null)) .
result Data: bool(false)
==========================================
reduce in CREOL-DATA-BOOL : "||"("="(null :: null) :: "="(null :: null)) .
result Data: bool(true)
==========================================
reduce in CREOL-DATA-LIST : "|-"(list(int(1) :: int(2)) :: "head"(list(int(1)
    :: int(2)))) .
result Data: list(int(1) :: int(2) :: int(1))
==========================================
reduce in CREOL-DATA-LIST : "#"(list(emp)) .
result Data: int(0)
==========================================
reduce in CREOL-DATA-LIST : "#"(list(int(1) :: int(2))) .
result Data: int(2)
==========================================
reduce in CREOL-DATA-SET : "add"(set(emptyset) :: int(0)) .
result Data: set(int(0))
==========================================
reduce in CREOL-DATA-SET : "add"(set(int(0)) :: int(0)) .
result Data: set(int(0))
==========================================
reduce in CREOL-DATA-SET : "add"(set(int(1)) :: int(0)) .
result Data: set(int(0) : int(1))
==========================================
reduce in CREOL-DATA-SET : "remove"(set(emptyset) :: int(0)) .
result Data: set(emptyset)
==========================================
reduce in CREOL-DATA-SET : "remove"(set(int(0)) :: int(0)) .
result Data: set(emptyset)
==========================================
reduce in CREOL-DATA-SET : "remove"(set(int(1)) :: int(0)) .
result Data: set(int(1))
==========================================
reduce in CREOL-DATA-MAP : "in"(int(0) :: map(empty)) .
result Data: bool(false)
==========================================
reduce in CREOL-DATA-MAP : "insert"(map(empty) :: int(0) :: int(0)) .
result Data: map(mapentry(int(0), int(0)))
Bye.
