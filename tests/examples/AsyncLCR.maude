load creol-interpreter .
mod PROGRAM is
  protecting CREOL-SIMULATOR .
  op state : -> State [ctor] .
  eq state = {
    < "Process" : Class | Inh: noInh, Param: "i", "u", Att: "i" |-> null, "u"
      |-> null, "status" |-> null, "neighbor" |-> null,
      Mtds: < "init" : Method | Param: noVid, Att: "ccglab1" |-> null,
              "ccglab0" |-> null, "_" |-> null,
              Code: assign( "status" ; int(0) ) ; call( "ccglab0" ; "i" ;
              "getNeighbor" ; emp ) ; get( "ccglab0" ; "neighbor" ) ;
              free( "ccglab0" ) ; call( "ccglab1" ; "neighbor" ; "receive" ;
              "u" ) ; free( "ccglab1" ) ; return ( emp ) >,
            < "run" : Method | Param: noVid, Att: "_" |-> null, Code: skip ;
              return ( emp ) >,
            < "receive" : Method | Param: "v", Att: "v" |-> null, "ccglab0"
              |-> null, "_" |-> null, Code: if ">" ( "v" :: "u" ) th
              call( "ccglab0" ; "neighbor" ; "receive" ; "v" ) ;
              free( "ccglab0" ) el if "=" ( "v" :: "u" ) th
              assign( "status" ; int(1) ) el skip fi fi ; return ( emp ) >,
      Ocnt: 0 >
    
    < "Init" : Class | Inh: noInh, Param: noVid, Att: "p1" |-> null, "p2" |->
      null, "p3" |-> null,
      Mtds: < "run" : Method | Param: noVid, Att: "_" |-> null, Code: skip ;
              return ( emp ) >,
            < "init" : Method | Param: noVid, Att: "_" |-> null,
              Code: new( "p1" ; "Process" ; "this" :: int(1) ) ;
              new( "p2" ; "Process" ; "this" :: int(2) ) ;
              new( "p3" ; "Process" ; "this" :: int(3) ) ; return ( emp ) >,
            < "getNeighbor" : Method | Param: noVid, Att: "p" |-> null, "_"
              |-> null, Code: if "=" ( "caller" :: "p1" ) th
              assign( "p" ; "p3" ) el if "=" ( "caller" :: "p2" ) th
              assign( "p" ; "p1" ) el assign( "p" ; "p2" ) fi fi ;
              return ( "p" ) >,
      Ocnt: 0 > } .
endm

