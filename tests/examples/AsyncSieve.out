==========================================
reduce in PROGRAM : classes .
result Configuration: 
< "Generator" : Class | Inh: noInh, Param: noVid, Att: "n" |-> null, "next" |->
    null, Mtds:
  < "init" : Method | Param: noVid, Att: "_" |-> null, Code: assign("n" @
    "Generator" ; int(3)) ; new("next" ; "Sieve" ; int(2)) ; return(emp) >, <
    "run" : Method | Param: noVid, Att: "_" |-> null, "l" |-> null, "label:0"
    |-> null, "r" |-> null, Code: call("l" ; "next" ; "send" ; "n" :: "-"("n"
    :: int(3))) ; assign("n" ; "+"("n" :: int(1))) ; call("label:0" ; "this" ;
    "run" ; emp) ; free("label:0") ; await ?("l") ; get("l" ; "r") ; free("l")
    ; return(emp) >,
  Ocnt: 0 >
 
< "Sieve" : Class | Inh: noInh, Param: "p", Att: "ins" |-> null, "next" |->
    null, "outs" |-> null, "p" |-> null, Mtds:
  < "init" : Method | Param: noVid, Att: "_" |-> null, Code: assign(("ins" @
    "Sieve"), ("outs" @ "Sieve") ; int(0) :: int(0)) ; return(emp) >, < "run" :
    Method | Param: noVid, Att: "_" |-> null, Code: skip ; return(emp) >, <
    "send" : Method | Param: "n", "seq", Att: "_" |-> null, "l" |-> null, "n"
    |-> null, "res" |-> null, "seq" |-> null, Code: await "="("seq" :: "ins") ;
    assign("ins" ; "+"("ins" :: int(1))) ; if "="("%"("n" :: "p") :: int(0)) th
    assign("res" ; bool(false)) el if "/="("next" :: null) th call("l" ; "next"
    ; "send" ; "n" :: "outs") ; assign("outs" ; "+"("outs" :: int(1))) ; await
    ?("l") ; get("l" ; "res") ; free("l") el new("next" ; "Sieve" ; "n") ;
    assign("res" ; bool(true)) fi fi ; return("res") >,
  Ocnt: 0 >

Bye.
