load creol-interpreter .
mod PROGRAM is
  protecting CREOL-SIMULATOR .
  op classes : -> Configuration [ctor] .
  eq classes =
    < "SantaClaus" : Class | Inh: noInh, Param: noVid, Att: "ctReindeers" |->
      null, "waitReindeers" |-> null, "harnessedReindeers" |-> null,
      "ctElves" |-> null, "waitElves" |-> null, "inofficeElves" |-> null,
      Mtds: < "init" : Method | Param: noVid, Att: "_" |-> null,
              Code: assign( ( "ctReindeers" @ "SantaClaus" ),
              ( "waitReindeers" @ "SantaClaus" ),
              ( "harnessedReindeers" @ "SantaClaus" ),
              ( "ctElves" @ "SantaClaus" ), ( "waitElves" @ "SantaClaus" ),
              ( "inofficeElves" @ "SantaClaus" ) ; int(0) :: list(emp) ::
              list(emp) :: int(0) :: list(emp) :: list(emp) ) ;
              return ( emp ) >,
            < "run" : Method | Param: noVid, Att: "label:0" |-> null, "_" |->
              null, Code: call( "label:0" ; "this" ; "loop" ; emp ) ;
              free( "label:0" ) ; return ( emp ) >,
            < "loop" : Method | Param: noVid, Att: "label:2" |-> null,
              "label:1" |-> null, "label:0" |-> null, "_" |-> null,
              Code: (await "=" ( "ctReindeers" :: int(5) ) ;
                      call( "label:0" ; "this" ; "deliverToys" ; emp ) ;
                      get( "label:0" ; noVid ) ; free( "label:0" ) [] await
                      "&&" ( "<=" ( int(3) :: "ctElves" ) ::
                      "~" ( "=" ( "ctReindeers" :: int(9) ) ) ) ;
                      call( "label:1" ; "this" ; "talkToElves" ; emp ) ;
                      get( "label:1" ; noVid ) ; free( "label:1" ))
              ; call( "label:2" ; "this" ; "loop" ; emp ) ; free( "label:2" )
              ; return ( emp ) >,
            < "deliverToys" : Method | Param: noVid, Att: "label:1" |-> null,
              "label:0" |-> null, "t1" |-> null, "t2" |-> null, "t3" |->
              null, "t4" |-> null, "t5" |-> null, "_" |-> null,
              Code: assign( "ctReindeers" ; int(0) ) ; call( "t1" ;
              "head" ( "waitReindeers" ) ; "harness" ; emp ) ;
              assign( "harnessedReindeers" ; "|-" ( "harnessedReindeers" ::
              "head" ( "waitReindeers" ) ) ) ;
              assign( "waitReindeers" ; "tail" ( "waitReindeers" ) ) ;
              call( "t2" ; "head" ( "waitReindeers" ) ; "harness" ; emp ) ;
              assign( "harnessedReindeers" ; "|-" ( "harnessedReindeers" ::
              "head" ( "waitReindeers" ) ) ) ;
              assign( "waitReindeers" ; "tail" ( "waitReindeers" ) ) ;
              call( "t3" ; "head" ( "waitReindeers" ) ; "harness" ; emp ) ;
              assign( "harnessedReindeers" ; "|-" ( "harnessedReindeers" ::
              "head" ( "waitReindeers" ) ) ) ;
              assign( "waitReindeers" ; "tail" ( "waitReindeers" ) ) ;
              call( "t4" ; "head" ( "waitReindeers" ) ; "harness" ; emp ) ;
              assign( "harnessedReindeers" ; "|-" ( "harnessedReindeers" ::
              "head" ( "waitReindeers" ) ) ) ;
              assign( "waitReindeers" ; "tail" ( "waitReindeers" ) ) ;
              call( "t5" ; "head" ( "waitReindeers" ) ; "harness" ; emp ) ;
              assign( "harnessedReindeers" ; "|-" ( "harnessedReindeers" ::
              "head" ( "waitReindeers" ) ) ) ;
              assign( "waitReindeers" ; "tail" ( "waitReindeers" ) ) ; await
              "&&" ( "&&" ( "&&" ( "&&" ( ?("t1") :: ?("t2") ) :: ?("t3") )
              :: ?("t4") ) :: ?("t5") ) ; free( "t5" ) ; free( "t4" ) ;
              free( "t3" ) ; free( "t2" ) ; free( "t1" ) ; call( "label:0" ;
              "head" ( "harnessedReindeers" ) ; "unharness" ; emp ) ;
              free( "label:0" ) ;
              assign( "harnessedReindeers" ; "tail" ( "harnessedReindeers" ) )
              ; call( "label:1" ; "head" ( "harnessedReindeers" ) ;
              "unharness" ; emp ) ; free( "label:1" ) ;
              assign( "harnessedReindeers" ; "tail" ( "harnessedReindeers" ) )
              ; return ( emp ) >,
            < "talkToElves" : Method | Param: noVid, Att: "t1" |-> null, "t2"
              |-> null, "t3" |-> null, "_" |-> null,
              Code: assign( "ctElves" ; "-" ( "ctElves" :: int(3) ) ) ;
              call( "t1" ; "head" ( "waitElves" ) ; "showIn" ; emp ) ;
              assign( "inofficeElves" ; "|-" ( "inofficeElves" ::
              "head" ( "waitElves" ) ) ) ;
              assign( "waitElves" ; "tail" ( "waitElves" ) ) ; call( "t2" ;
              "head" ( "waitElves" ) ; "showIn" ; emp ) ;
              assign( "inofficeElves" ; "|-" ( "inofficeElves" ::
              "head" ( "waitElves" ) ) ) ;
              assign( "waitElves" ; "tail" ( "waitElves" ) ) ; call( "t3" ;
              "head" ( "waitElves" ) ; "showIn" ; emp ) ;
              assign( "inofficeElves" ; "|-" ( "inofficeElves" ::
              "head" ( "waitElves" ) ) ) ;
              assign( "waitElves" ; "tail" ( "waitElves" ) ) ; await
              "&&" ( "&&" ( ?("t1") :: ?("t2") ) :: ?("t3") ) ; free( "t3" )
              ; free( "t2" ) ; free( "t1" ) ; call( "t1" ;
              "head" ( "inofficeElves" ) ; "showOut" ; emp ) ;
              assign( "inofficeElves" ; "tail" ( "inofficeElves" ) ) ;
              call( "t2" ; "head" ( "inofficeElves" ) ; "showOut" ; emp ) ;
              assign( "inofficeElves" ; "tail" ( "inofficeElves" ) ) ;
              call( "t3" ; "head" ( "inofficeElves" ) ; "showOut" ; emp ) ;
              assign( "inofficeElves" ; "tail" ( "inofficeElves" ) ) ; await
              "&&" ( "&&" ( ?("t1") :: ?("t2") ) :: ?("t3") ) ; free( "t3" )
              ; free( "t2" ) ; free( "t1" ) ; return ( emp ) >,
            < "backFromHoliday" : Method | Param: noVid, Att: "_" |-> null,
              Code: assign( "ctReindeers" ; "+" ( "ctReindeers" :: int(1) ) )
              ; assign( "waitReindeers" ; "|-" ( "waitReindeers" ::
              "caller" ) ) ; return ( emp ) >,
            < "haveProblem" : Method | Param: noVid, Att: "_" |-> null,
              Code: assign( "ctElves" ; "+" ( "ctElves" :: int(1) ) ) ;
              assign( "waitElves" ; "|-" ( "waitElves" :: "caller" ) ) ;
              return ( emp ) >,
      Ocnt: 0 >
    
    < "Reindeer" : Class | Inh: noInh, Param: "sc", Att: "sc" |-> null,
      Mtds: < "init" : Method | Param: noVid, Att: "_" |-> null, Code: skip ;
              return ( emp ) >,
            < "run" : Method | Param: noVid, Att: "label:0" |-> null, "_" |->
              null, Code: call( "label:0" ; "this" ; "holiday" ; emp ) ;
              free( "label:0" ) ; return ( emp ) >,
            < "holiday" : Method | Param: noVid, Att: "label:0" |-> null, "_"
              |-> null, Code: call( "label:0" ; "sc" ; "backFromHoliday" ;
              emp ) ; free( "label:0" ) ; return ( emp ) >,
            < "deliverToys" : Method | Param: noVid, Att: "_" |-> null,
              Code: skip ; return ( emp ) >,
            < "harness" : Method | Param: noVid, Att: "label:0" |-> null, "_"
              |-> null,
              Code: call( "label:0" ; "this" ; "deliverToys" ; emp ) ;
              free( "label:0" ) ; return ( emp ) >,
            < "unharness" : Method | Param: noVid, Att: "label:0" |-> null,
              "_" |-> null,
              Code: call( "label:0" ; "this" ; "holiday" ; emp ) ;
              free( "label:0" ) ; return ( emp ) >,
      Ocnt: 0 >
    
    < "Elf" : Class | Inh: noInh, Param: "sc", Att: "sc" |-> null,
      Mtds: < "init" : Method | Param: noVid, Att: "_" |-> null, Code: skip ;
              return ( emp ) >,
            < "run" : Method | Param: noVid, Att: "label:0" |-> null, "_" |->
              null, Code: call( "label:0" ; "this" ; "work" ; emp ) ;
              free( "label:0" ) ; return ( emp ) >,
            < "work" : Method | Param: noVid, Att: "label:0" |-> null, "_"
              |-> null, Code: call( "label:0" ; "sc" ; "haveProblem" ; emp )
              ; free( "label:0" ) ; return ( emp ) >,
            < "talkToSanta" : Method | Param: noVid, Att: "_" |-> null,
              Code: skip ; return ( emp ) >,
            < "showIn" : Method | Param: noVid, Att: "label:0" |-> null, "_"
              |-> null,
              Code: call( "label:0" ; "this" ; "talkToSanta" ; emp ) ;
              free( "label:0" ) ; return ( emp ) >,
            < "showOut" : Method | Param: noVid, Att: "label:0" |-> null, "_"
              |-> null, Code: call( "label:0" ; "this" ; "work" ; emp ) ;
              free( "label:0" ) ; return ( emp ) >,
      Ocnt: 0 >
    
    < "LeaderElf" : Class | Inh: "Elf" < emp >, Param: "sc", "elves",
      Att: "sc" |-> null, "elves" |-> null,
      Mtds: < "init" : Method | Param: noVid, Att: "_" |-> null, Code: skip ;
              return ( emp ) >,
            < "run" : Method | Param: noVid, Att: "label:0" |-> null, "_" |->
              null, Code: static( "label:0" ; "run" ; "Elf" ; "" ; emp ) ;
              get( "label:0" ; noVid ) ; free( "label:0" ) ; return ( emp ) >,
            < "work" : Method | Param: noVid, Att: "label:0" |-> null, "_"
              |-> null, Code: call( "label:0" ; "sc" ; "haveProblem" ; emp )
              ; free( "label:0" ) ; return ( emp ) >,
      Ocnt: 0 >
    
    < "Christmas" : Class | Inh: noInh, Param: noVid, Att: noSubst,
      Mtds: < "init" : Method | Param: noVid, Att: "_" |-> null, Code: skip ;
              return ( emp ) >,
            < "run" : Method | Param: noVid, Att: "sc" |-> null, "r" |->
              null, "e" |-> null, "_" |-> null,
              Code: new( "sc" ; "SantaClaus" ; emp ) ;
              new( "r" ; "Reindeer" ; "sc" ) ; new( "r" ; "Reindeer" ; "sc" )
              ; new( "r" ; "Reindeer" ; "sc" ) ;
              new( "r" ; "Reindeer" ; "sc" ) ; new( "r" ; "Reindeer" ; "sc" )
              ; new( "e" ; "Elf" ; "sc" ) ; new( "e" ; "Elf" ; "sc" ) ;
              new( "e" ; "Elf" ; "sc" ) ; new( "e" ; "Elf" ; "sc" ) ;
              new( "e" ; "Elf" ; "sc" ) ; new( "e" ; "Elf" ; "sc" ) ;
              new( "e" ; "Elf" ; "sc" ) ; return ( emp ) >,
      Ocnt: 0 > .
endm

