==========================================
reduce in PROGRAM : classes .
result Configuration: 
< "A" : Class | Inh: noInh, Param: "a", Att: "a" |-> null, Mtds:
  < "init" : Method | Param: noVid, Att: "_" |-> null, Code: skip ; return(emp)
    >, < "m" : Method | Param: noVid, Att: "_" |-> null, "r" |-> null, Code:
    assign("r" ; "a") ; return("r") >, < "run" : Method | Param: noVid, Att:
    "_" |-> null, Code: skip ; return(emp) >,
  Ocnt: 0 >
 
< "B" : Class | Inh: "A" < "b" >, Param: "b", Att: "b" |-> null, Mtds:
  < "init" : Method | Param: noVid, Att: "_" |-> null, Code: assert "="("a" ::
    "b") ; return(emp) >, < "n" : Method | Param: noVid, Att: "_" |-> null,
    "label:0" |-> null, "r" |-> null, Code: call("label:0" ; "this" ; "m" ;
    emp) ; get("label:0" ; "r") ; free("label:0") ; return("r") >, < "run" :
    Method | Param: noVid, Att: "_" |-> null, Code: skip ; return(emp) >,
  Ocnt: 0 >
 
< "C" : Class | Inh: "A" < "c" >, Param: "c", Att: "c" |-> null, Mtds:
  < "init" : Method | Param: noVid, Att: "_" |-> null, Code: assert "="("a" ::
    "c") ; return(emp) >, < "o" : Method | Param: noVid, Att: "_" |-> null,
    "label:0" |-> null, "r" |-> null, Code: call("label:0" ; "this" ; "m" ;
    emp) ; get("label:0" ; "r") ; free("label:0") ; return("r") >, < "run" :
    Method | Param: noVid, Att: "_" |-> null, Code: skip ; return(emp) >,
  Ocnt: 0 >
 
< "D" : Class | Inh: "B" < int(1) >,"C" < int(2) >, Param: noVid, Att: "x" |->
    null, "y" |-> null, Mtds:
  < "init" : Method | Param: noVid, Att: "_" |-> null, Code: skip ; return(emp)
    >, < "run" : Method | Param: noVid, Att: "_" |-> null, "label:0" |-> null,
    "label:1" |-> null, Code: call("label:0" ; "this" ; "n" ; emp) ; get(
    "label:0" ; "x") ; free("label:0") ; call("label:1" ; "this" ; "o" ; emp) ;
    get("label:1" ; "y") ; free("label:1") ; assert "&&"("="("x" :: int(1)) ::
    "="("y" :: int(2))) ; return(emp) >,
  Ocnt: 0 >

==========================================
rewrite in PROGRAM : main(classes, "D", emp) .
result [State]: {
< ob("D0") : "D" |
  Att: "a" |-> int(2), "b" |-> int(1), "c" |-> int(2), "this" |-> ob("D0"), "x"
    |-> null, "y" |-> null,
  Pr: {".class" |-> str("B"), ".label" |-> label(ob("D0"), 3), ".method" |->
    str("init"), "_" |-> null, "caller" |-> ob("D0") | failure "="("a" :: "b")
    ; return(emp) ; $cont label(ob("D0"), 3)},
  PrQ: {".init" |-> label(ob("D0"), 3), ".label" |-> label(ob("main"), 0) |
    get(label(ob("D0"), 3) ; noVid) ; free(".init") ; call(".anon" ; "this" ;
    "init" ; emp) ; get(".anon" ; noVid) ; free(".anon") ; call(".anon" ;
    "this" ; "run" ; emp) ; free(".anon")},
  Lcnt: 4 >
 
< ob("main") : Start |
  Att: noSubst,
  Pr: idle,
  PrQ: noProc,
  Lcnt: 1 >
 
< "A" : Class | Inh: noInh, Param: "a", Att: "a" |-> null, Mtds:
  < "init" : Method | Param: noVid, Att: "_" |-> null, Code: skip ; return(emp)
    >, < "m" : Method | Param: noVid, Att: "_" |-> null, "r" |-> null, Code:
    assign("r" ; "a") ; return("r") >, < "run" : Method | Param: noVid, Att:
    "_" |-> null, Code: skip ; return(emp) >,
  Ocnt: 0 >
 
< "B" : Class | Inh: "A" < "b" >, Param: "b", Att: "b" |-> null, Mtds:
  < "init" : Method | Param: noVid, Att: "_" |-> null, Code: assert "="("a" ::
    "b") ; return(emp) >, < "n" : Method | Param: noVid, Att: "_" |-> null,
    "label:0" |-> null, "r" |-> null, Code: call("label:0" ; "this" ; "m" ;
    emp) ; get("label:0" ; "r") ; free("label:0") ; return("r") >, < "run" :
    Method | Param: noVid, Att: "_" |-> null, Code: skip ; return(emp) >,
  Ocnt: 0 >
 
< "C" : Class | Inh: "A" < "c" >, Param: "c", Att: "c" |-> null, Mtds:
  < "init" : Method | Param: noVid, Att: "_" |-> null, Code: assert "="("a" ::
    "c") ; return(emp) >, < "o" : Method | Param: noVid, Att: "_" |-> null,
    "label:0" |-> null, "r" |-> null, Code: call("label:0" ; "this" ; "m" ;
    emp) ; get("label:0" ; "r") ; free("label:0") ; return("r") >, < "run" :
    Method | Param: noVid, Att: "_" |-> null, Code: skip ; return(emp) >,
  Ocnt: 0 >
 
< "D" : Class | Inh: "B" < int(1) >,"C" < int(2) >, Param: noVid, Att: "x" |->
    null, "y" |-> null, Mtds:
  < "init" : Method | Param: noVid, Att: "_" |-> null, Code: skip ; return(emp)
    >, < "run" : Method | Param: noVid, Att: "_" |-> null, "label:0" |-> null,
    "label:1" |-> null, Code: call("label:0" ; "this" ; "n" ; emp) ; get(
    "label:0" ; "x") ; free("label:0") ; call("label:1" ; "this" ; "o" ; emp) ;
    get("label:1" ; "y") ; free("label:1") ; assert "&&"("="("x" :: int(1)) ::
    "="("y" :: int(2))) ; return(emp) >,
  Ocnt: 1 >
}
Bye.
