dnl Makefile.am - Use automake to create Makefile.in
dnl
dnl This file is part of creoltools
dnl
dnl Written and Copyright (c) 2007 by Marcel Kyas
dnl
dnl This program is free software; you can redistribute it and/or
dnl modify it under the terms of the GNU General Public License as
dnl published by the Free Software Foundation; either version 3 of the
dnl License, or (at your option) any later version.
dnl
dnl This program is distributed in the hope that it will be useful, but
dnl WITHOUT ANY WARRANTY; without even the implied warranty of
dnl MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
dnl General Public License for more details.
dnl
dnl You should have received a copy of the GNU General Public License
dnl along with this program.  If not, see <http://www.gnu.org/licenses/>.
dnl

dnl diff two files with uniform output.
m4_define([DIFF], [AT_CHECK([/usr/bin/diff -autN $1 $2])])

dnl Execute a maude command and compare it to the expected results.
dnl First parameter is the name of the test, second parameter is the maude
dnl script to execute for the text.  Number of rewrites will be filtered.
m4_define([TEST_MAUDE], [dnl
AT_CHECK([$MAUDE -no-banner -no-advise -batch $2 | /bin/sed -f ${abs_srcdir}/maude.sed > $1.out])
DIFF([${abs_srcdir}/$3/$1.out], [$1.out])
])

dnl Test the logging interpreter
m4_define([TEST_LOGGING], [dnl
AT_CHECK([${CREOLC} -T maude -W all ${abs_srcdir}/simulation/$1.creol -o $1.maude])
AT_CHECK([sed -i 's/creol-interpreter/creol-logginginterpreter/g' $1.maude])
DIFF([${abs_srcdir}/simulation/$1.maude], [$1.maude])

AT_DATA([test.maude],
[
set show timing off .
set show advise off .
set trace off .
set break off .
set profile off .
load $1 .
$2
quit .
])
TEST_MAUDE([$1], test.maude, simulation)


])


dnl Test our tool chain.  Requires maude,
dnl
dnl The test works as follows:
dnl Given an argument the test will first compile a maude version of the
dnl system.  This will be compared to some expected results.
dnl Then a set of tests, defined in [name]-tests.maude are run on this
dnl model and the output of maude is again compared to some expected
dnl results.
dnl
dnl The first argument is the name of the test.
dnl The second argument is the directory in which the test data is stored.
dnl The third argument is the commands used to run the test in Maude.
dnl The fourth argument is the commands used to run the test in Maude using
dnl   the meta-level interpreter.
dnl The optional fifth argument is used to disable cmc validation, which
dnl   parses the result of executing Maude and tries to print it in our
dnl   Creol-like syntax.
m4_define([TEST_CREOLC], [dnl
AT_SETUP([$1])
AT_CHECK([${CREOLC} -T maude -W all ${abs_srcdir}/$2/$1.creol -o $1.maude])
DIFF([${abs_srcdir}/$2/$1.maude], [$1.maude])
AT_DATA([test.maude],
[
set show timing off .
set show advise off .
set trace off .
set break off .
set profile off .
load $1 .
$3
quit .
])
TEST_MAUDE([$1], test.maude, $2)

if test "x$WITH_METATESTS" = "xyes"
then
AT_DATA([metatest.maude], [
set show timing off .
set show advise off .
set trace off .
set break off .
set profile off .
load creol-interpreter .
load $1 .
load creol-metaexec .
$4
quit .
])
TEST_MAUDE([meta-$1], metatest.maude, $2)
fi

if test "x$5" != "xno"
then
    AT_CHECK([/bin/sed -e '/^======/,+2 d' -e '/^Bye.$/ d' ${abs_srcdir}/$2/$1.out | cmcvalid -], [0], [ignore], [])
fi

AT_CLEANUP
])

m4_define([TEST_CREOLMC], [dnl
AT_SETUP([$1])
AT_CHECK([${CREOLC} -T maudemc ${abs_srcdir}/$2/$1.creol -o $1.maude])
DIFF([${abs_srcdir}/$2/$1.maude], [$1.maude])
AT_DATA([test.maude],
[
set show timing off .
set show advise off .
load $1 .
$3
quit .
])
TEST_MAUDE([$1], test.maude, [$2])

if [ "x$WITH_METATESTS" = "xyes" ]
then
AT_DATA([metatest.maude],
[
set show timing off .
set show advise off .
load creol-interpreter .
load $1 .
load creol-metaexec .
$4
quit .
])
TEST_MAUDE([meta-$1], metatest.maude, $2)
fi

l=`wc -l < ${abs_srcdir}/$2/$1.out`
l=`expr $l - 2`
AT_CHECK([/bin/sed -e 1d -e 2d -e 3d -e "$l"q ${abs_srcdir}/$2/$1.out | cmcvalid -], [0], [ignore], [])

AT_CLEANUP
])

m4_define([TEST_CREOLC_PP],[dnl
AT_CHECK([${CREOLC} -T creol -P typecheck -o $1-pp1.creol ${abs_srcdir}/$2/$1.creol])
AT_CHECK([${CREOLC} -T creol -P typecheck -o $1-pp2.creol $1-pp1.creol])
DIFF([$1-pp1.creol], [$1-pp2.creol])
])

dnl test the xml export.
m4_define([TEST_CREOLC_XML],[dnl
  if ${WITH_XML}
  then
    AT_CHECK([${CREOLC} -T xml -P typecheck -o $1-pass1.xml ${abs_srcdir}/$2/$1.creol])
  fi
])

dnl Test a particular pass.
dnl
m4_define([TEST_CREOLC_PASS],[dnl
AT_SETUP([$1-$2])
if $WITH_XML
then
    AT_CHECK([${CREOLC} -T xml -p $1 ${abs_srcdir}/$1/$2.creol -o $2.xml],
	     [0], [], [])
    DIFF([${abs_srcdir}/$1/$2.xml], [$2.xml])
fi
AT_CLEANUP
])

m4_define([TEST_CREOLC_SYNTAX],[dnl
AT_SETUP([syntax-$1])
AT_CHECK([${CREOLC} -T none ${abs_srcdir}/syntax/$1.creol 2>&1 | /bin/sed s,${abs_srcdir}/syntax/,,], ignore, [$2], [])
AT_CLEANUP
])

m4_define([TEST_CREOLC_TYPECHECK],[dnl
AT_SETUP([typecheck-$1])
AT_CHECK([${CREOLC} -T none ${abs_srcdir}/typecheck/$1.creol 2>&1 | /bin/sed s,${abs_srcdir}/typecheck/,,], ignore, [$2], [])
AT_CLEANUP
])
