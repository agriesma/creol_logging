==========================================
reduce in PROGRAM-CHECKER : classes .
result Configuration: 
< "Butler" : Class | Inh: noInh, Param: noVid, Att: "p1" |-> null, "p2" |->
    null, "p3" |-> null, Mtds:
  < "getNeighbor" : Method | Param: noVid, Att: "_" |-> null, "neighbor" |->
    null, Code: if "="("caller" :: "p1") th assign("neighbor" ; "p2") el if
    "="("caller" :: "p2") th assign("neighbor" ; "p3") el assign("neighbor" ;
    "p1") fi fi ; return("neighbor") >, < "init" : Method | Param: noVid, Att:
    "_" |-> null, Code: skip ; return(emp) >, < "run" : Method | Param: noVid,
    Att: "_" |-> null, Code: new("p1" ; "Philosopher" ; "this") ; new("p2" ;
    "Philosopher" ; "this") ; new("p3" ; "Philosopher" ; "this") ; return(emp)
    >,
  Ocnt: 0 >
 
< "Philosopher" : Class | Inh: noInh, Param: "butler", Att: "butler" |-> null,
    "chopstick" |-> null, "hungry" |-> null, "neighbor" |-> null, Mtds:
  < "borrowStick" : Method | Param: noVid, Att: "_" |-> null, Code: await
    "chopstick" ; assign("chopstick" ; bool(false)) ; return(emp) >, < "eat" :
    Method | Param: noVid, Att: "_" |-> null, "label:0" |-> null, "label:1" |->
    null, "label:2" |-> null, Code: await "hungry" ; call("label:0" ;
    "neighbor" ; "borrowStick" ; emp) ; await ?("label:0") ; get("label:0" ;
    noVid) ; free("label:0") ; await "chopstick" ; assign("hungry" ; bool(
    false)) ; call("label:1" ; "neighbor" ; "returnStick" ; emp) ; free(
    "label:1") ; call("label:2" ; "this" ; "eat" ; emp) ; free("label:2") ;
    return(emp) >, < "init" : Method | Param: noVid, Att: "_" |-> null,
    "label:0" |-> null, Code: assign("chopstick" ; bool(true)) ; assign(
    "hungry" ; bool(false)) ; call("label:0" ; "butler" ; "getNeighbor" ; emp)
    ; get("label:0" ; "neighbor") ; free("label:0") ; return(emp) >, <
    "returnStick" : Method | Param: noVid, Att: "_" |-> null, Code: assign(
    "chopstick" ; bool(true)) ; return(emp) >, < "run" : Method | Param: noVid,
    Att: "_" |-> null, "label:0" |-> null, "label:1" |-> null, Code: call(
    "label:0" ; "this" ; "think" ; emp) ; free("label:0") ; call("label:1" ;
    "this" ; "eat" ; emp) ; free("label:1") ; return(emp) >, < "think" : Method
    | Param: noVid, Att: "_" |-> null, "label:0" |-> null, Code: await "~"(
    "hungry") ; release ; assign("hungry" ; bool(true)) ; call("label:0" ;
    "this" ; "think" ; emp) ; free("label:0") ; return(emp) >,
  Ocnt: 0 >

Bye.
