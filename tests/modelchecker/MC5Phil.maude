load creol-modelchecker .
mod PROGRAM is
  protecting CREOL-SIMULATOR .
  op classes : -> Configuration [ctor] .
  eq classes =
    < "Philosopher" : Class | Inh: noInh, Param: "butler", Att: "butler" |->
      null, "hungry" |-> null, "chopstick" |-> null, "neighbor" |-> null,
      Mtds: < "init" : Method | Param: noVid, Att: "ccglab0" |-> null, "_"
              |-> null,
              Code: assign( ( "chopstick" @ "Philosopher" ) ; bool(true) ) ;
              assign( ( "hungry" @ "Philosopher" ) ; bool(false) ) ;
              call( "ccglab0" ; ( "butler" @ "Philosopher" ) ;
              "getNeighbor" ; emp ) ;
              get( "ccglab0" ; ( "neighbor" @ "Philosopher" ) ) ;
              return ( emp ) >,
            < "run" : Method | Param: noVid, Att: "ccglab1" |-> null,
              "ccglab0" |-> null, "_" |-> null,
              Code: call( "ccglab0" ; "this" ; "think" ; emp ) ;
              free( "ccglab0" ) ; call( "ccglab1" ; "this" ; "eat" ; emp ) ;
              free( "ccglab1" ) ; return ( emp ) >,
            < "eat" : Method | Param: noVid, Att: "ccglab2" |-> null,
              "ccglab1" |-> null, "ccglab0" |-> null, "_" |-> null,
              Code: await ( "hungry" @ "Philosopher" ) ; call( "ccglab0" ;
              ( "neighbor" @ "Philosopher" ) ; "borrowStick" ; emp ) ; await
              ?("ccglab0") ; get( "ccglab0" ; noVid ) ; await
              ( "chopstick" @ "Philosopher" ) ;
              assign( ( "hungry" @ "Philosopher" ) ; bool(false) ) ;
              call( "ccglab1" ; ( "neighbor" @ "Philosopher" ) ;
              "returnStick" ; emp ) ; free( "ccglab1" ) ;
              call( "ccglab2" ; "this" ; "eat" ; emp ) ; free( "ccglab2" ) ;
              return ( emp ) >,
            < "think" : Method | Param: noVid, Att: "ccglab0" |-> null, "_"
              |-> null, Code: await "~" ( ( "hungry" @ "Philosopher" ) ) ;
              release ; assign( ( "hungry" @ "Philosopher" ) ; bool(true) ) ;
              call( "ccglab0" ; "this" ; "think" ; emp ) ; free( "ccglab0" )
              ; return ( emp ) >,
            < "borrowStick" : Method | Param: noVid, Att: "_" |-> null,
              Code: await ( "chopstick" @ "Philosopher" ) ;
              assign( ( "chopstick" @ "Philosopher" ) ; bool(false) ) ;
              return ( emp ) >,
            < "returnStick" : Method | Param: noVid, Att: "_" |-> null,
              Code: assign( ( "chopstick" @ "Philosopher" ) ; bool(true) ) ;
              return ( emp ) >,
      Ocnt: 0 >
    
    < "Butler" : Class | Inh: noInh, Param: noVid, Att: "p1" |-> null, "p2"
      |-> null, "p3" |-> null, "p4" |-> null, "p5" |-> null,
      Mtds: < "init" : Method | Param: noVid, Att: "_" |-> null, Code: skip ;
              return ( emp ) >,
            < "run" : Method | Param: noVid, Att: "_" |-> null,
              Code: new( ( "p1" @ "Butler" ) ; "Philosopher" ; "this" ) ;
              new( ( "p2" @ "Butler" ) ; "Philosopher" ; "this" ) ;
              new( ( "p3" @ "Butler" ) ; "Philosopher" ; "this" ) ;
              new( ( "p4" @ "Butler" ) ; "Philosopher" ; "this" ) ;
              new( ( "p5" @ "Butler" ) ; "Philosopher" ; "this" ) ;
              return ( emp ) >,
            < "getNeighbor" : Method | Param: noVid, Att: "neighbor" |->
              null, "_" |-> null, Code: if "=" ( "caller" ::
              ( "p1" @ "Butler" ) ) th
              assign( "neighbor" ; ( "p2" @ "Butler" ) ) el if "=" ( "caller"
              :: ( "p2" @ "Butler" ) ) th
              assign( "neighbor" ; ( "p3" @ "Butler" ) ) el if "=" ( "caller"
              :: ( "p3" @ "Butler" ) ) th
              assign( "neighbor" ; ( "p4" @ "Butler" ) ) el if "=" ( "caller"
              :: ( "p4" @ "Butler" ) ) th
              assign( "neighbor" ; ( "p5" @ "Butler" ) ) el
              assign( "neighbor" ; ( "p1" @ "Butler" ) ) fi fi fi fi ;
              return ( "neighbor" ) >,
      Ocnt: 0 > .
endm

mod PROGRAM-CHECKER is
  protecting MODEL-CHECKER .
  protecting PROGRAM .
  protecting CREOL-PREDICATES .
endm
